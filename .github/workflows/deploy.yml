name: Test API on Windows (GitHub Actions)

on:
  push:
    branches:
      - main  # Déclencher le workflow sur push vers la branche main
  workflow_dispatch:  # Permet de lancer le workflow manuellement

jobs:
  test:
    runs-on: windows-latest  # Utiliser un environnement Windows

    steps:
      # Étape 1 : Vérifier le code source
      - name: Checkout Code
        uses: actions/checkout@v3

      # Étape 2 : Configurer l'environnement Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # Étape 3 : Créer un environnement virtuel
      - name: Set up Virtual Environment
        run: |
          python -m venv myenv
          myenv\Scripts\activate

      # Étape 4 : Installer les dépendances
      - name: Install dependencies
        run: |
          myenv\Scripts\activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Étape 5 : Lancer l'API en arrière-plan
      - name: Start API
        run: |
          myenv\Scripts\activate
          start python API_p7_Reglog.py
        shell: cmd

      # Étape 6 : Attendre que l'API soit prête
      - name: Wait for API to start
        shell: cmd
        run: |
          set /a counter=0
          :wait_for_api
          curl http://localhost:8001/health || (
            set /a counter+=1
            if %counter% geq 10 exit /b 1
            timeout /t 5
            goto wait_for_api
          )

      # Étape 7 : Exécuter les tests unitaires
      - name: Run Unit Tests
        run: |
          myenv\Scripts\activate
          python -m unittest test_Api_LogReg_P7.py

      # Étape 8 : Tester les endpoints de l'API avec des requêtes HTTP
      - name: Test API Endpoints
        run: |
          myenv\Scripts\activate
          python test_api_with_requests.py
